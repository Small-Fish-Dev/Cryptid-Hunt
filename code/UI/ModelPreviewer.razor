@using Sandbox;
@using Sandbox.UI;
@namespace CryptidHunt

<root>
    <button class="modelPreviewButton" onclick=@Previous>❮</button>
    <div class="modelPreviewerer">
        <div class="modelInfo">@CurrentPreview.Name - @CurrentPreview.Author</div>
    </div>
    <button class="modelPreviewButton" onclick=@Next>❯</button>
</root>

@code
{
    public struct ModelPreview
    {
        public string Name;
        public string Path;
        public string Author;
        public Angles Rotation;
        public Vector3 Offset;
        public float Zoom;

        public static ModelPreview[] All => new ModelPreview[]
        {
            new ModelPreview { Name = "Polewik", Path = "models/polewik/polewik.vmdl", Author = "Grodbert", Rotation = new Angles( 20, 10, 0 ), Offset = new Vector3( 0, 0, -20 ), Zoom = 0.5f },
            new ModelPreview { Name = "Ammo Pack", Path = "models/items/ammo.vmdl", Author = "Luke", Rotation = new Angles( 20, 45, 0 ), Offset = new Vector3( 0, 0, -15 ), Zoom = 1.5f },
            new ModelPreview { Name = "Bear Trap", Path = "models/items/beartrap.vmdl", Author = "Luke", Rotation = new Angles( 35, 45, 0 ), Offset = new Vector3( 0, 0, 0 ), Zoom = 1.5f },
            new ModelPreview { Name = "Locked Chest", Path = "models/items/chest.vmdl", Author = "Luke", Rotation = new Angles( 0, -60, -20 ), Offset = new Vector3( 0, 0, -15 ), Zoom = 1.2f },
            new ModelPreview { Name = "Crowbar", Path = "models/items/crowbar.vmdl", Author = "Luke", Rotation = new Angles( 15, 45, 60 ), Offset = new Vector3( 0, -30, 10 ), Zoom = 2f },
            new ModelPreview { Name = "Key", Path = "models/items/key.vmdl", Author = "Luke", Rotation = new Angles( 0, 30, 180 ), Offset = new Vector3( 0, 0, 0 ), Zoom = 4f },
            new ModelPreview { Name = "Lock", Path = "models/items/lock.vmdl", Author = "Luke", Rotation = new Angles( 0, 235, 0 ), Offset = new Vector3( 0, 0, 15 ), Zoom = 5f },
            new ModelPreview { Name = "Medkit", Path = "models/items/medkit.vmdl", Author = "Luke", Rotation = new Angles( -20, 225, 0 ), Offset = new Vector3( 0, 0, -10 ), Zoom = 1.8f },
            new ModelPreview { Name = "Bed", Path = "models/items/bed.vmdl", Author = "Luke", Rotation = new Angles( -20, 0, 0 ), Offset = new Vector3( 0, 0, -20 ), Zoom = 0.5f },
            new ModelPreview { Name = "Page", Path = "models/items/page.vmdl", Author = "Luke", Rotation = new Angles( 60, 20, 0 ), Offset = new Vector3( 0, 0, 0 ), Zoom = 2.6f },
            new ModelPreview { Name = "Sign", Path = "models/items/sign.vmdl", Author = "Luke", Rotation = new Angles( 0, 90, 0 ), Offset = new Vector3( 0, 0, -25 ), Zoom = 0.7f },
            new ModelPreview { Name = "Palos Verdes Brain", Path = "models/brain/brain.vmdl", Author = "Grodbert", Rotation = new Angles( 20, 10, 0 ), Offset = new Vector3( 0, 0, -20 ), Zoom = 0.5f },
            /*
            ["models/placeholders/placeholder_key.vmdl"] = "Placeholder (ubre)",
            ["models/placeholders/placeholder_beartrap.vmdl"] = "Placeholder (ubre)",
            ["models/placeholders/placeholder_crowbar.vmdl"] = "Placeholder (ubre)",
            ["models/placeholders/placeholder_shotgun.vmdl"] = "Placeholder (ubre)",
            ["models/placeholders/placeholder_medkit.vmdl"] = "Placeholder (ubre)",
            ["models/placeholders/placeholder_page.vmdl"] = "Placeholder (ubre)",
            ["models/placeholders/placeholder_ammo.vmdl"] = "Placeholder (ubre)",
            ["models/placeholders/placeholder_locked_door.vmdl"] = "Placeholder (ubre)",
            ["models/placeholders/placeholder_locked_chest.vmdl"] = "Placeholder (ubre)"*/
        };

    }

    public int CurrentSelected = 0;
    public ModelPreview CurrentPreview => ModelPreview.All[CurrentSelected];

    public void Previous()
    {
        CurrentSelected = (CurrentSelected - 1) % ModelPreview.All.Count();
        if (CurrentSelected <= -1)
            CurrentSelected = ModelPreview.All.Count() - 1;

        Sound.Play("button_click");
    }

    public void Next()
    {
        CurrentSelected = (CurrentSelected + 1) % ModelPreview.All.Count();
        Sound.Play("button_click");
    }


	/// <summary>
    /// the hash determines if the system should be rebuilt. If it changes, it will be rebuilt
    /// </summary>
    protected override int BuildHash() => System.HashCode.Combine(CurrentSelected);
}
